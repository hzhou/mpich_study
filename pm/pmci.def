page: pmiserv_pmci # from pm/pmiserv/pmiserv_pmci.c

subcode: _autoload
    $register(hdr) struct HYD_pmcd_hdr

fncode: HYD_pmci_launch_procs
    $fcall HYDT_dmx_register_fd, 1, &$.cmd_piep[0], POLLIN, NULL, ui_cmd_cb
    $fcall HYD_pmcd_pmi_alloc_pg_scratch, &$.pg_list
    $fcall HYD_sock_create_and_listen_portstr, $(iface), $.localhost, $.port_range, &control_port, $(listen_cb), NULL
    $fcall HYD_pmcd_pmi_fill_in_proxy_args, &proxy_stash, control_port, 0
    $fcall HYD_pmcd_pmi_fill_in_exec_launch_info, &$.pg_list
    $call @update_node_count
    $call @alloc_control_fd_list

    $fcall HYDT_bsci_launch_procs, proxy_stash.strlist, $.pg_list.proxy_list, HYD_TRUE, control_fd
    &call each_proxy
        $if control_fd[i] != HYD_FD_UNSET
            proxy->control_fd = control_fd[i]
            $fcall HYDT_dmx_register_fd(1, &control_fd[i], POLLIN, NULL, HYD_pmcd_pmiserv_proxy_init_cv
    MPL_free(control_fd)

fncode: HYD_pmci_wait_for_completion(int timeout)
    &call each_pg
        pg_scratch = pg->pg_scratch
        $while pg_scratch->control_listen_fd != HYD_FD_CLOSED
            $call get_time
            $if timeout >0
                $call @check_time_out
            $else
                time_left = 0
            status = HYDT_dmx_wait_for_event(time_left)
            $if status == HYD_TIMED_OUT
                continue
            HYDU_ERR_POP(status, "error HYDT_dmx_register_fd\n")
    $call get_time
    $if timeout>0
        time_left = timeout - time_elapsed
        $if time_left < 0
            time_left = 0
    $else
        time_left = 0

    $fcall HYDT_bsci_wait_for_completion(time_left)

    subcode: get_time
        gettimeofday(&now, NULL)
        time_elapsed = now.tv_sec - start.tv_sec

    subcode: check_time_out
        $if time_elapsed > timeout
            $call @time_out
        $else
            time_left = timeout - time_elapsed

        subcode: time_out
            HYDU_dump(stdout, "APPLICATION TIMED OUT, TIMEOUT = %ds\n", timeout)
            $fcall HYD_pmcd_pmiserv_cleanup_all_pgs
            $fcall HYDT_bsci_wait_for_completion, 0

#---------------------------------------- 
fncode: ui_cmd_cb(fd, events, void* userp)
    $call read, fd, &cmd
    $if cmd.type == HYD_CKPOINT
        $call send_to_proxies
    $elif cmd.type == HYD_CLEANUP
        HYDU_dump_noprefix(stdout, "Ctrl-C caught... cleaning up processes\n"
        $fcall HYD_pmcd_pmiserv_cleanup_all_pgs
        $fcall HYDT_bsci_wait_for_completion(0)
        exit(1)
    $elif cmd.type == HYD_SIGNAL
        &call each_pg
            &call each_proxy
                $fcall HYD_pmcd_pmiserv_send_signal, proxy, cmd.signum

fncode: HYD_status send_cmd_to_proxies(hdr)
    pg = &HYD_server_info.pg_list

    # pg->next set means dynamic process
    $if pg->next && hdr.cmd == CKPOINT
        HYDU_ERR_POP(status, "checkpointing is not supported for dynamic processes\n")

    &call each_proxy
        $call send, proxy->control_fd, hdr
