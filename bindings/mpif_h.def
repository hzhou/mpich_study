macros:
    src: $ENV{HOME}/work/mpich-github/src
    mpi_h: $(src)/include/mpi.h.in
    mpio_h: $(src)/mpi/romio/include/mpio.h.in

# chdir mpif_h
# perl buildiface > /dev/null
#     -infile=cf90t.h     # $prototype_file
#     -deffile=cf90tdefs  # require $definition_file

page: buildiface
    my $prototype_file = "$(mpi_h)"
    my $definition_file
    my $build_prototypes = 1

    $if $definition_file
        require $definition_file

    $global %skipBlocks = ()
    ReadAndProcessInterface($prototype_file, 0)

    $if -s "$(src)/mpi/romio/include/mpio.h.in"
        %skipBlocks = (
            HAVE_MPI_DARRAY_SUBARRAY => 1,
            HAVE_MPI_INFO => 1,
            MPICH => 1,
            );
        ReadAndProcessInterface("$(mpio_h)", 1)

    $if is_MPI
        build_specials()
    $else
        $for $i=0:@ExtraRoutines
            &{$ExtraRoutines[$i]}()

    $if $build_prototypes
        &call open_W, $prototype_header_file.new
            $call @prototype_copyright

    $if $buildMakefile
        $call dump_Makefile_mk

#---------------------------------------- 
fncode: ReadAndProcessInterface($f, $protect_MPIO)
    my $stage
    &call open_r, $f
        $if /\/\*\s*Begin Prototypes/
            $stage = 1
        $elif /\/\*\s*End Prototypes/
            $stage = 0
        $elif !$stage
            last
        $elif /\/\*\s*Begin Skip Prototypes/
            $stage = 2
        $elif /\/\*\s*End Skip Prototypes/
            $stage = 1
        $elif $stage == 2
            next
        $elif /$(match_routine)/
            # routine_name, $args
            my $lcname = lc($routine_name)
            $if $CtoFName{$lcname}
                $lcname = $CtoFName{$lcname}
                
            $if defined $special_routines{$routine_name}
                # skip
            $else
                my $filename = $name_map{$lcname}
                $if !$filename
                    $filename = $lcname."f.c"

                &call open_W, $filename
                    $call dump_f_c
                $call dump_f_h

    subcode: dump_f_c
        $call print_header
        $if $do_subdecls
            $print "FORT_DLL_SPEC $returnType FORT_CALL -"
        $else
            $print "$returnType FORT_CALL -"
        $print "${out_prefix}$lcname_ -"
        $call print_args
        $print "{\n"
        $call specialInitClear
        $if $protectMPIO
            $print "#ifdef MPI_MODE_RDONLY"
        $if $do_fint
            $call printCallForFint
        $call print_special_decls
        $call adjust_mpi_bottom
        $if defined $ChangeCall{$routine_name}
            my ($newName, $extraArgs) = split /:/, $ChangeCall{$routine_name}
            $print "    $errparmlval = $newName-"
            $call print_call_args
        $else
            $print "    $errparmlval = $routine_prefix$routine_name-"
            $call print_call_args
        $call print_post_call
        $if $do_fint
            $print "#endif"
        $if $protectMPIO
            $print "#else\n$errparmlval = MPI_ERR_INTERN;\n#endif"
        $if $returnErrval
            $print "    return $errparmlval;"
        $print }

    subcode: dump_f_h
        &call open_W, fproto.h
            $call print_copy_right
            $print "\x2f* Prototypes for Fortran Interface Functions */"


#---------------------------------------- 
subcode: dump_Makefile_mk
    &call open_W, Makefile.mk.new
        # preamble
        $print EXTRA_DIST += src/binding/fortran/mpif_h/buildiface
        $print if MAINTAINER_MODE
        # ...
        $print if BUILD_F77_BUILD
        $print     mpi_f77_sources +=
        $foreach $f in @files
            $print "src/binding/fortran/mpif_h/$f "
        $print     mpi_core_sources +=
        $print     mpi_sources +=
        $print AM_CPPFLAGS +=
        $print noinst_HEADERS +=
        $print DISTCLEANFILES +=
        $print nodist_include_HEADERS +=

subcode: prototype_copyright
    $print /* -*- Mode: C; c-basic-offset:4 ; -*- */
    $print /*
    $print  * (C) 2001 by Argonne National Laboratory.
    $print  *     See COPYRIGHT in top-level directory.
    $print  *
    $print  * This file is automatically generated by buildiface
    $print  * DO NOT EDIT
    $print  */
    $print /* Prototypes for Fortran Interface Functions */
