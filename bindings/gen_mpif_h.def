include: macros/load.def
include: macros/profiling.def

# NOTE: MPI_T_xxx are C binding only

macros:
    DIR_INTERFACE: interface

page: gen_mpif_h
    module: perl

    # $call load_types, BASE_C
    $call load_types, SMALL_C
    # $call load_types, SMALL_F90
    $call load_types, F77_C
    $call load_funcs
    $(if:1)
        $call check_mpi_h
    $(elif:0)
        $call dump_func, MPI_Send, F77_C
        my $t = f_get_arg_types("MPI_Send", $F77_C_type_hash)
        $print "    : $t"
    $(else)
        $call output_f_c, MPI_Send

    subcode: dump_func(name, lang)
        my $func = $func_hash{$(name)}
        $print $(name):
        $foreach $p in @{$func->{params}}
            my $type = f_get_type($p, $$(lang)_type_hash)
            $print "\t$p->{name}: $type"


subcode: output_f_c(MPI_Func)
    my $Func = "$(MPI_Func)"
    my $func = lc($Func)
    my $FUNC = uc($Func)
    my $func_ = lc($Func)."_"
    my $func__ = lc($Func)."__"
    my $PFUNC = "P$FUNC"
    my $arg_types = f_get_arg_types($Func, $F77_C_type_hash)
    &call open_W, out/sendf.c
        $call copyright
        $print "#include \"mpi_fortimpl.h\""
        $print "\n\n"
        $call profiling_block
        $print
        $print "\x2f* Prototypes for the Fortran interfaces */"
        $print "#include \"fproto.h\"" 
        $call f77_func

    subcode: f77_func
        my (@arg_1, @arg_2, @converts)
        my $params = $func_hash{$Func}->{params}
        $foreach $_i,$p in @$params
            my $v = "v".($_i+1)
            my $type_f77 = f_get_type($p, $F77_C_type_hash)
            push @arg_1, "$type_f77$v"

            $if $p->{type} eq "BUFFER"
                push @arg_2, "$v"
                push @converts, "if ($v == MPIR_F_MPI_BOTTOM) $v = MPI_BOTTOM;"
            $else
                my $type_C = f_get_type($p, $SMALL_C_type_hash)
                push @arg_2, "($type_C)(*$v)"
        push @arg_1, "MPI_Fint *ierr"

        my $arg_1 = join(", ", @arg_1)
        my $arg_2 = join(", ", @arg_2)
        $print "FORT_DLL_SPEC void FORT_CALL $func_ ( $arg_1 ){"
        $foreach $l in @converts
            $print "    $l"
        $print "    *ierr = $Func( $arg_2 );"
        $print "}"

#---------------------------------------- 
subcode: copyright
    $print "\x2f* -*- Mode: C; c-basic-offset:4 ; -*- */"
    $print "\x2f*  "
    $print " *  (C) 2001 by Argonne National Laboratory."
    $print " *      See COPYRIGHT in top-level directory."
    $print " *"
    $print " * This file is automatically generated by buildiface "
    $print " * DO NOT EDIT"
    $print " */"

