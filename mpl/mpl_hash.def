include: ../study/mpich_frame.def
include: macros/hash.def

subcode: _autoload
    $include "mplconfig.h"

page: mpl_hash, -
    module: c
    # dump_h: mpl_hash.h
    has_bool: 1

    $list MPL_hash_new
    $list MPL_hash_has
    $list MPL_hash_set
    $list MPL_hash_get
    $list MPL_hash_free

subcode: document
    &call doc, Rationale:
        An open addressing hash implementation specialized for string keys and string values. All strings are stored in a managed string pool in a insertion only manner. Deletion is achieved by simply overwrite the hash item with sentinel value/NULL. Deletion and reassignement will result in expired strings still being held in memory, which may be a concern if the application requires frequent deletion and modification and memory consumption is of concern. All memory will be released upon final free.

        Compared to uthash.h, the usage interface is cleaner and more intuitive -- hash_new, hash_set, hash_get, hash_has, and hash_free. In comparison, uthash requires extra data structure, does not manage string memory, and the code is more complex. This implementation is faster than uthash as well.
