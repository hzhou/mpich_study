include: macros_common/mymake.def
output_dir: ./mymake

page: mymake_ld
    my (@args, %info)
    my $lt = "./libtool"
    $call parse_args

    $if $info{libname} !~ /libmpi/
        my $cmd = "$lt --mode=link --quiet"
        $cmd .= " $info{CC}"
        $if $info{libname}
            $cmd .= " -o $info{libname}.la"
        $if $info{rpath}
            $cmd .= " -rpath $info{rpath}"
        $if $info{so_version}
            $cmd .= " -version-info $info{so_version}"
        $cmd .= " " . join(' ', @args)
        system $cmd
    $else
        $call ld_libmpi

    subcode: ld_libmpi
        $call load_opts
        my $cmd = "$info{CC}"
        my ($libdir, $name1, $name2, $name3)
        $if $info{libname}=~/(.*)\/(\w+)/
            $libdir = $1
            $name1 = "$2.so.$info{so_version}"
            $name2 = "$2.so.$info{so_name}"
            $name3 = "$2.so"
            $cmd .= " -shared"
            $cmd .= " -o $libdir/.libs/$name1"
        $foreach $a in @args
            $if $a=~/(.*)\/(\S+)\.lo$/
                $cmd .= " $1/.libs/$2.o"
            $elif $a=~/(.*)\/(\S+)\.la$/
                $cmd .= " -Wl,--whole-archive"
                $cmd .= " $1/.libs/$2.a"
                $cmd .= " -Wl,--no-whole-archive"
                $call load_la_dependency_libs
            $else
                $cmd .= " $a"

        my $libs
        $libs = " -lm -lstdc++ -lrt -latomic -lpthread -ldl"
        $if $opts{"with-cuda"}
            $libs .= " -L".$opts{"with-cuda"}
            $libs .= " -lcudart -lcuda"
        $cmd .= $libs

        $cmd .= " -Wl,-soname -Wl,$name2"

        $call make_libdir
        system $cmd
        $call dump_links

        &call open_W, $info{libname}.la
            $call dump_la

        subcode: make_libdir
            $if !-d "$libdir/.libs"
                system "mkdir -p $libdir/.libs"
        subcode: dump_links
            system "ln -sf $name1 $libdir/.libs/$name2"
            system "ln -sf $name1 $libdir/.libs/$name3"
        subcode: load_la_dependency_libs
            &call open_r, $a
                $if /^dependency_libs='(.*)'/
                    $cmd .= $1

    subcode: parse_args
        my $opt
        $foreach $a in @ARGV
            $if $opt
                $opt .= " $a"
            $else
                $opt = $a

            $if $opt=~/^lt=(.*)/
                $lt = $1
            $elif $opt=~/^-(o|rpath|version-info)$/
                next
            $elif $opt=~/^(gcc|mpicc)/
                $info{CC}=$opt
            $elif $opt=~/^-o (.*)\.la$/
                $info{libname} = $1
            $elif $opt=~/^-rpath (.*)$/
                $info{rpath} = $1
            $elif $opt=~/^-version-info (\d+):(\d+):(\d+)$/
                my $major = $1 - $3
                my $minor = $3
                my $revision = $2
                $info{so_version} = "$major.$minor.$revision"
                $info{so_name} = "$major"
            $else
                push @args, $opt

            undef $opt

page: mymake_install
    $use Cwd
    my ($obj, $dst) = @ARGV
    $if $dst=~/\/lib$/
        $if $obj=~/(.*)\/libmpi.la/ -> $dir
            my ($name1, $name2, $name3)
            &call open_r, $obj
                $if /library_names='(\S+) (\S+) (\S+)'/
                    ($name1, $name2, $name3) = ($1, $2, $3)

            system "cp $obj $dst"
            $(if:0)
                system "cp $dir/.libs/$name1 $dst"
            $(else)
                my $cwd = getcwd()
                system "ln -sf $cwd/$dir/.libs/$name1 $dst"
            system "ln -sf $name1 $dst/$name2"
            system "ln -sf $name1 $dst/$name3"
        $else
            system "$(LT_install) $obj $dst"
    $elif $dst=~/\/bin$/
        system "$(LT_install) $obj $dst"
    $elif $dst=~/\/include$/
        system "cp $obj $dst"

    macros: 
        LT_install: ./libtool --mode=install --silent install

#---------------------------------------- 
subcode: dump_la
    $(if:0)
        $print "library_names='$name1 $name2 $name3'"
    $(else)
        $print "# libmpi.la - a libtool library file"
        $print "# Generated by libtool (GNU libtool) 2.4.6 Debian-2.4.6-14"
        $print "#"
        $print "# Please DO NOT delete this file!"
        $print "# It is necessary for linking the library."
        $print
        $print "# The name that we can dlopen(3)."
        $print "dlname='libmpi.so.0'"
        $print
        $print "# Names of this library."
        $print "library_names='$name1 $name2 $name3'"
        $print
        $print "# The name of the static archive."
        $print "old_library=''"
        $print
        $print "# Linker flags that cannot go in dependency_libs."
        $print "inherited_linker_flags=''"
        $print
        $print "# Libraries that this one depends upon."
        $print "dependency_libs='$libs'"
        $print
        $print "# Names of additional weak libraries provided by this library"
        $print "weak_library_names=''"
        $print
        $print "# Version information for libmpi."
        $print "current=0"
        $print "age=0"
        $print "revision=0"
        $print
        $print "# Is this an already installed library?"
        $print "installed=no"
        $print
        $print "# Should we warn about portability when linking against -modules?"
        $print "shouldnotlink=no"
        $print
        $print "# Files to dlopen/dlpreopen"
        $print "dlopen=''"
        $print "dlpreopen=''"
        $print
        $print "# Directory that this library needs to be installed in:"
        $use Cwd
        my $cwd = getcwd()
        $print "libdir='$cwd/_inst/lib'"
        $print
