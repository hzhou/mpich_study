subcode: test_mymake_config
    $global @mpich_config, @testmpi_config
    $call parse_config
    $call parse_trigger_phrase
    $call @set_missing_default
    $call filter_config

    subcode: parse_config
        my $config = $ENV{config}
        $print parsing config: [$config]...
        $config=~s/[\/-]/:/g
        $if $config=~/^(default|ch3:tcp)/
            NOOP
        $elif $config=~/^ch[34]/
            push @mpich_config, "--with-device=$config"

    subcode: parse_trigger_phrase
        my $trigger_phrase = $ENV{ghprbCommentBody}
        $trigger_phrase=~s/\\r\\n/\n/g
        $trigger_phrase=~s/\n\s*:/ /g

        $call check_test_script
        $call check_mpich_config
        $call check_custom_testlist
        $call check_compiler
        $call check_other_options

        subcode: check_test_script
            my %h_script = ("quick"=>"test_quick", "mpich"=>"test_build")
            $if $trigger_phrase=~/^test_script\s*[:=]\s*(\w+)/m && $h_script{$1}
                $ENV{test_script}=$h_script{$1}

        subcode: check_mpich_config
            my $t = $ENV{configOption}."\n".$trigger_phrase
            $print parsing trigger phrase: \n   [$t]...
            $while $t=~/(--(enable|disable|with|without)-\S+)/g
                push @mpich_config, $1

        subcode: check_custom_testlist
            $global @testlist
            $while $trigger_phrase=~/^testlist:\s*(.+)/mg
                $print testlist [$1]
                push @testlist, $1
            $if @testlist
                &call open_W, test/mpi/testlist.custom
                    $foreach $l in @testlist
                        $print $l
                $ENV{skip_test}="custom"

        subcode: check_compiler
            $if $trigger_phrase=~/^\s*compiler\s*[:=]\s*(\w+)/m
                $ENV{compiler}=$1

        subcode: check_other_options
            $if $trigger_phrase=~/^\s*build_out_of_tree\s*[:=]\s*(yes|true|1)/m
                $ENV{outoftree}="true"
                
    #---------------------------------------- 
    subcode: set_missing_default
        my $test_script = $ENV{test_script}
        $if !$test_script
            $(if:0)
                $test_script = "test_quick"
            $(else)
                $test_script = "test_build"

        $if !$ENV{compiler}
            $ENV{compiler}='gnu'

    #---------------------------------------- 
    subcode: filter_config
        # FIXME: temporary measure...
        $if $ENV{test_script} eq "test_quick"
            # push @mpich_config, "--disable-cxx"
            push @mpich_config, "--disable-fortran"
            push @mpich_config, "--disable-romio"

        my (%config_hash)
        $if @mpich_config
            $foreach $t in @mpich_config
                $call filter_with_device
                $call filter_config_hash # remove duplicate
                $call filter_test_config
            $call @filter_gforker_config
        $call per_device_config

        push @testmpi_config, "--disable-perftest"

        $if @mpich_config
            $ENV{mpich_config}= join(' ', @mpich_config)
        $if @testmpi_config
            $ENV{testmpi_config} = join(' ', @testmpi_config)

        # ----------------------
        subcode: filter_with_device
            $if $t=~/--with-device=(\S+)/
                $if $config_hash{device}
                    $if $config_hash{device} ne $1
                        $global $conflict_with_device
                        $conflict_with_device=1
                $config_hash{device}=$1
                next

        subcode: filter_config_hash
            my $k=$t
            $k=~s/=.*$//
            $k=~s/^--(disable|enable|with|without)-//
            $if $config_hash{$k}
                $t=''
                next
            $config_hash{$k}=1

        subcode: filter_test_config
            $if $t=~/--(disable|enable)-(.*-tests)/
                push @testmpi_config, $t
                $t=''
                next
            $elif $t=~/--disable-(romio|fortran)/
                push @testmpi_config, $t

        subcode: per_device_config
            $if $config_hash{device}=~/^(ch\d:\w+)/
                $ENV{mpich_device}=$1
            $else
                $ENV{mpich_device}="ch3:tcp"

            $if $ENV{mpich_device}=~/ch3:sock/
                push @testmpi_config, "--disable-ft-tests"
                push @testmpi_config, "--disable-comm-overlap-tests"
            $if $ENV{mpich_device}=~/ch4:ucx/
                push @testmpi_config, "--disable-ft-tests"
                push @testmpi_config, "--disable-spawn"
            $if $ENV{mpich_device}=~/ch4:ofi/
                push @testmpi_config, "--disable-ft-tests"

        subcode: filter_gforker_config
            my $t = join(' ', @mpich_config)
            $if $t=~/gforker/ 
                $if $t!~/--with-namepublisher/
                    $t .= " --with-namepublisher=file"
                $else
                    $t=~s/--with-pm=gforker//
