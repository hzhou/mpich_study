subcode: compile_mpich
    $call preproc_bindings
    $call mpich_configure
    $call @post_mpich_configure

    $call add_rule_cpi

    $call need_mpich_preproc
    $(for:mpl,opa,hwloc)
        $call need_$1

    $if !$opts{disable_romio}
        $call need_romio

    $if $opts{device}=~/ucx/
        $call need_ucx
    $if $opts{device}=~/ofi/
        $call need_ofi
    $call custom_make

    # ---------------------------
    subcode: custom_programs
        $if $t=~/mpichversion/
            # mpichversion include mpiimpl.h
            # pgcc won't ignore static inline functions
            # causing undefined reference to `fi_strerror` etc.
            next
    # ---------------------------
    subcode: dump_variable_custom
        $call filter_var_hwloc
        $(if:key=CPPFLAGS)
            $call filter_var_mpl_etc
            $t .= $I_list

    subcode: set_libs_custom
        $(if:which=ltlibs)
            $if $add!~/mpi(fort|cxx)/
                $call filter_lib_mpl_etc
                $call filter_lib_ucx
                $call filter_lib_ofi
                $t.= $L_list
    # ---------------------------
    subcode: post_mpich_configure
        &call open_r, src/include/mpichconf.h
            $if /^#define\s+HAVE_.*WEAK.* 1/
                $opts{have_weak}=1
        &call open_r, maint/version.m4
            $if /libmpi_so_version_m4.*\[([\d:]*)\]/
                $opts{so_version}=$1
        &call open_r, config.status
            $if /S\["WRAPPER_LIBS"\]="(.*)"/
                $opts{WRAPPER_LIBS}=$1

        $if !$opts{have_weak}
            $special_targets{lib_libmpi_la}="\x24(LTCC) -DMPICH_MPI_FROM_PMPI"

        # install mpicc etc.
        my $bin="\x24(PREFIX)/bin"
        $(for:p in mpicc,mpicxx,mpif77,mpifort)
            $if -f "src/env/$(p).bash"
                $call get_file_lines, src/env/$(p).bash
                my %tmp=(PREFIX=>$prefix, EXEC_PREFIX=>"$prefix/bin", SYSCONFDIR=>"$prefix/etc", INCLUDEDIR=>"$prefix/include", LIBDIR=>"$prefix/lib")
                &call open_w, mymake/$(p)
                    $foreach $l in @lines
                        $l=~s/__(\w+)_TO_BE_FILLED_AT_INSTALL_TIME__/$tmp{$1}/e
                        print Out $l
                $dst_hash{"mymake/$(p)"}=$bin
        $dst_hash{"LN_S-$bin/mpic++"}="$bin/mpicxx"
        $dst_hash{"LN_S-$bin/mpif90"}="$bin/mpifort"

    # --------------------
    subcode: add_rule_cpi
        push @extra_make_rules, "examples/cpi: lib/libmpi.la"
        push @extra_make_rules, "\t\x24(CC) -o examples/cpi examples/cpi.c lib/.libs/libmpi.a $opts{WRAPPER_LIBS}"
        push @extra_make_rules, ""
        
#---------------------------------------- 
macros:
    mpich_configure_deps:: subsys_include.m4
    mpich_configure_deps:: configure
    mpich_configure_deps:: Makefile
    mpich_configure_deps:: mymake/Makefile.*

subcode: mpich_configure
    $if !-f "subsys_include.m4"
        $call stage, maint/gen_subcfg_m4
        system "perl maint/gen_subcfg_m4"
    $if !-f "configure"
        system "rm -f mymake/Makefile.orig"
        $call stage, Autoconf MPICH
        &call temporary_modify
            $call modify_configure_ac
            system "autoreconf -ivf"
    $if !-f "mymake/Makefile.orig"
        $call stage, Configure MPICH
        system "rm -f Makefile"
        my $t = join ' ', @config_args
        system "./configure --with-pm=no $t" # we'll configure/build hydra separately
        system "mv Makefile mymake/Makefile.orig"
        &call temporary_modify
            $call patch_libtool

    # -------------------
    subcode: modify_configure_ac
        &call modify, configure.ac
            $if $l=~/AC_CONFIG_SUBDIRS/
                next
            $elif $l=~/^\s*HWLOC_/
                next
            $elif $l=~/^(\s*)(PAC_CONFIG_SUBDIR.*)/
                $l = "$1: \x23 $2\n"
        &call modify, Makefile.am
            $if $l=~/ACLOCAL_AMFLAGS/
                $l ="ACLOCAL_AMFLAGS = -I confdb\n"
        my $flag
        &call modify, src/mpid/ch3/subconfigure.m4
            $if $l=~/AC_MSG_CHECKING.*OpenPA/
                $flag=1
            $elif $flag and $l=~/AC_C_BIGENDIAN/
                $flag=0
            $elif $flag
                next
        $if $opts{device}=~/ucx/
            $call patch_configure_ucx
        $if $opts{device}=~/ofi/
            $call patch_configure_ofi

subcode: need_mpich_preproc
    $(set:errhan=src/mpi/errhan/$1)
    push @extra_make_rules, "$(errhan:errutil.lo): $(errhan:defmsg.h)"
    $call push_autogen_rule, errmsg, src/mpi/errhan/defmsg.h
    push @CONFIGS, "src/include/mpichconf.h"
    push @CONFIGS, "src/include/mpir_cvars.h"
    $call push_autogen_rule, cvars, src/include/mpir_cvars.h
    # $call push_autogen_rule, logs, src/include/mpiallstates.h

    &call add_subdir_rule_block, src/glue/romio, src/glue/romio/all_romio_symbols.c
        push @t, "perl all_romio_symbols ../../mpi/romio/include/mpio.h.in"

subcode: preproc_bindings
    $if !$opts{disable_cxx}
        $opts{enable_cxx}=1
        $call need_cxx
    $else
        system "touch src/binding/cxx/mpicxx.h.in"

    $if !$opts{disable_fortran}
        $call need_fortran
    $else
        $(for:mpif_h,use_mpi, use_mpi_f08)
            system "touch src/binding/fortran/$1/Makefile.mk"
        $(for:mpif.h, setbotf.h, setbot.c)
            system "touch src/binding/fortran/mpif_h/$1.in"
        $(for:mpi_sizeofs.f90, mpi_base.f90, mpi_constants.f90)
            system "touch src/binding/fortran/use_mpi/$1.in"
        $(for:mpi_f08_compile_constants.f90, mpi_c_interface_types.f90)
            system "touch src/binding/fortran/use_mpi_f08/$1.in"


    subcode: need_cxx
        $if !-f "configure"
            $print : buildiface - cxx
            chdir "src/binding/cxx"
            system "perl buildiface -nosep -initfile=./cxx.vlist"
            chdir $pwd
        $dst_hash{"src/binding/cxx/mpicxx.h"}="$prefix/include"

    subcode: need_fortran
        $(set:D=src/binding/fortran)
        $if !-f "configure"
            $call buildiface, mpif_h
        $(if:1)
            $if !-f "configure"
                $call buildiface, use_mpi
            $call add_extra_use_mpi
        $(if:1)
            $if !-f "configure"
                $call buildiface, use_mpi_f08
                $call buildiface, use_mpi_f08/wrappers_c
            $call add_extra_use_mpi_f08

        $dst_hash{"$(D)/mpif_h/mpif.h"}="$prefix/include"

        subcode: buildiface(dir)
            $print : buildiface - $(dir)
            chdir "$(D)/$(dir)"
            $(if:dir=use_mpi_f08/wrappers_c)
                system "rm -f Makefile.mk"
                system "perl buildiface $pwd/src/include/mpi.h.in"
                system "perl buildiface $pwd/src/mpi/romio/include/mpio.h.in"
            $(elif:dir=use_mpi)
                system "perl buildiface >/dev/null"
                system "perl ../mpif_h/buildiface -infile=cf90t.h -deffile=./cf90tdefs"
            $(else)
                system "perl buildiface >/dev/null"
            chdir $pwd

        subcode: add_extra_use_mpi
            $(set:U=$(D)/use_mpi)
            push @extra_make_rules, "$(U)/mpi.lo: $(U)/mpi_constants.lo $(U)/mpi_sizeofs.lo $(U)/mpi_base.lo"
            push @extra_make_rules, "$(U)/mpi_base.lo: $(U)/mpi_constants.lo", ""
            push @extra_make_rules, "$(U)/mpi_sizeofs.lo: $(U)/mpifnoext.h", ""
            push @extra_make_rules, "$(U)/mpi_constants.lo: $(U)/mpifnoext.h", ""
            push @extra_make_rules, "$(U)/mpifnoext.h: $(D)/mpif_h/mpif.h"
            push @extra_make_rules, "\tsed -e 's/^C/!/g' -e '/EXTERNAL|REAL\*8|DOUBLE PRECISION|MPI_WTICK/d' \$< > \$@"
            push @extra_make_rules, ""

        subcode: add_extra_use_mpi_f08
            $(set:U=$(D)/use_mpi_f08)
            push @extra_make_rules, "$(U)/mpi_c_interface.lo: $(U)/mpi_c_interface_nobuf.lo $(U)/mpi_c_interface_cdesc.lo", ""
            push @extra_make_rules, "$(U)/mpi_c_interface_nobuf.lo: $(U)/mpi_c_interface_glue.lo", ""
            push @extra_make_rules, "$(U)/mpi_c_interface_glue.lo: $(U)/mpi_f08.lo", ""

            push @extra_make_rules, "$(U)/mpi_f08.lo: $(U)/pmpi_f08.lo", ""
            push @extra_make_rules, "$(U)/pmpi_f08.lo: $(U)/mpi_f08_callbacks.lo $(U)/mpi_f08_link_constants.lo", ""
            push @extra_make_rules, "$(U)/mpi_f08_callbacks.lo: $(U)/mpi_f08_compile_constants.lo", ""
            push @extra_make_rules, "$(U)/mpi_f08_compile_constants.lo: $(U)/mpi_f08_types.lo", ""
            push @extra_make_rules, "$(U)/mpi_f08_link_constants.lo: $(U)/mpi_f08_types.lo", ""
            push @extra_make_rules, "$(U)/mpi_f08_types.lo: $(U)/mpi_c_interface_types.lo", ""
            push @extra_make_rules, "$(U)/mpi_c_interface_cdesc.lo: $(U)/mpi_c_interface_types.lo", ""

