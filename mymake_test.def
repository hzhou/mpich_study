include: macros_mymake/args.def

output_dir: ./mymake

page: mymake_testing
    module: perl

    $call load_opts
    $call prepare_testing

#---------------------------------------- 
subcode: prepare_testing
    my $dir = "test/mpi"
    my $srcdir="../.."
    chdir $dir or die "Can't chdir $dir\n"
    $if !-d "mymake"
        mkdir "mymake" or die "Can't mkdir mymake\n"

    system "which mpicc"

    $call @testing_config
    $call echo_system, "cp Makefile mymake/Makefile.orig"

subcode: run_tests
    $call echo_system, "make testing"

subcode: run_tests_custom
    my $dir="."
    $if $0=~/(.*)\//
        $dir=$1
    $call echo_system, "perl $dir/runtests.pl -tests=testlist.custom -junitfile=summary.junit.xml"

# --------------------------------
subcode: testing_config
    $call echo_system "rsync -r $srcdir/confdb/ confdb/"
    $call echo_system "rsync -r $srcdir/confdb/ dtpools/confdb/"
    $call echo_system "cp $srcdir/maint/version.m4 ."
    $call echo_system "sh autogen.sh"
    $call echo_system "autoreconf -ivf"
    $call @set_config_args
    $call echo_system "./configure $config_args"

    $call echo_system "cp Makefile mymake/Makefile.orig"

    subcode: set_config_args
        my $config_args = ""
        $foreach $t in split /\s+/, $opts{config_args}
            $if $t=~/--(dis|en)able-.*tests/
                $config_args .= " $t"
            $elif $t=~/--with-device=(.*)/
                $config_args .= " $t"
            $elif $t=~/--(dis|en)able-(fortran|cxx|romio)/
                $config_args .= " $t"
            $elif $t=~/--with-(thread-package|argobots)/
                $config_args .= " $t"

subcode: echo_system(@cmd)
    my $cmd = $(cmd)
    $print ": $cmd"
    system($cmd) == 0 or die "    Command failed.\n"
