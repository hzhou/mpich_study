include: macros_mymake/custom_make.def
include: macros_mymake/subdirs.def
include: macros_mymake/mpich.def
include: macros_mymake/hydra.def

macros:
    # SRCDIR: $ENV{HOME}/work/mpich-compile
    SRCDIR: $ENV{HOME}/work/tests/mpich
    MODDIR: $ENV{HOME}/work/modules
    PREFIX: $ENV{HOME}/MPI
    
    # do_make: 16

page: mymake
    module: perl

    my $pwd=`pwd`
    chomp $pwd
    $call parse_args
    $call set_mymake
    $(for:srcdir,moddir,prefix,device)
        $print $1: $$1

    $call compile_hydra
    $call compile_mpich

    subcode: set_mymake
        my $mymake
        $if $0=~/^(\/.*)\//
            $mymake = $1
        $elif $0=~/^(.*)\//
            $mymake .= "$pwd/$1"
        $mymake .="/mymake"

        $(for:errmsg,cvars,logs,hydra,stage)
            push @extra_make_rules, "DO_$1 = perl $mymake\_$1.pl"

    subcode: push_autogen_rule(name, file)
        push @extra_make_rules, "$(file):"
        push @extra_make_rules, "\t\x24(DO_$(name))"
        push @extra_make_rules, ""

include: macros_mymake/errmsgs.def
page: mymake_errmsg
    module: perl

    $call parse_args
    $call defmsg_h

include: macros_mymake/cvars.def
page: mymake_cvars
    module: perl

    $call parse_args
    $call extractcvars

include: macros_mymake/logstates.def
page: mymake_logs
    module: perl

    $call parse_args
    $call logging_states

page: mymake_hydra
    module: perl

    $call parse_args
    $call prepare_hydra

page: mymake_stage
    module: perl
    my $t = join(' ', @ARGV)
    $call stage, $t

#---------------------------------------- 
subcode: parse_args
    $global (%opts, @config_args)
    $opts{V}=0
    $foreach $a in @ARGV
        $if $a=~/^--(prefix)=(.*)/
            $opts{$1}=$2
        $elif $a=~/^(\w+)=(.*)/
            $opts{$1}=$2
        $elif $a=~/^(--.*)/
            push @config_args, $1
            $if $a=~/^--with-device=(.*)/
                $opts{device}=$1

    $if -f "maint/version.m4"
        $srcdir = "."
    $if $ENV{MODDIR}
        $moddir = $ENV{MODDIR}

    $map opt_set, srcdir, moddir, prefix

    $if $srcdir ne "."
        chdir $srcdir or die "can't chdir $srcdir\n"
    $if !-d "mymake"
        mkdir "mymake" or die "can't mkdir mymake\n"

    subcode: opt_set(name)
        $global $$(name) = "$($(name:uc))"
        $if $opts{$(name)}
            $$(name) = $opts{$(name)}

#---- stages ---------------------------- 
subcode: stage(@name)
    $print ---------------------------\n
    $print -     $(name)
    $print ---------------------------\n

#---- proprocess utils ---------------- 
macros:
    mpi_src_dirs: mpi mpi_t nameserv util binding include mpid pmi

subcode: find_files(dir, name)
    &call open_r, find $(dir) -name '$(name)' |
        chomp
        push @files, $_

subcode: each_ch_file
    my @files
    $foreach $dir in qw($(mpi_src_dirs))
        $call find_files, src/$dir, *.[ch]
    $call load_err_patterns
    $foreach $f in @files
        BLOCK

subcode: each_name_file(name)
    my @files
    $call find_files, ., $(name)
    $foreach $f in @files
        BLOCK

#---------------------------------------- 
subcode: hdr_guard(name)
    $print "#ifndef $(name:uc)_H_INCLUDED"
    $print "#define $(name:uc)_H_INCLUDED"
    $print
    BLOCK
    $print "#endif /* $(name:uc)_H_INCLUDED */"
