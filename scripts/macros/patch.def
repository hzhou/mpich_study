
subcode: patch_frame
    $(if:root)
        my $root = "$(root)"
    $(else)
        my $root = "$ENV{HOME}/work/mpich-github"
    chdir $root or die

    $call grep_$(patch)

    $foreach $f in @files
        $print patching $f... -
        my $cnt = patch($f)
        $print $cnt changes

fncode: patch($f)
    $call get_file_lines, $f
    my $cnt = 0

    my $i=0
    my $n_lines = @lines
    DUMP_STUB _patch_local
    $while $i<$n_lines; $i++
        $(set:l=$lines[$i])
        $(set:L=$lines[$i+$1])
        $call filter_lines_$(patch)
    $call @pass2_$(patch)
    $if $cnt>0
        &call open_w, $f
            $foreach $l in @lines
                $if ref($l) eq "ARRAY"
                    $foreach $ll in @$l
                        print Out $ll
                $elif $l ne "-DELETE"
                    print Out $l
    return $cnt

subcode: delete(l)
    $(l) = "-DELETE"

#---------------------------------------- 
macros:
    FIND: find . -name '*.[ch]'

subcode: grep_cmd(@cmd)
    my $grep_cmd="$(FIND) |xargs $(cmd) "
    my %files
    &call open_r, $grep_cmd |
        $if /^\.\/(src\S*):/
            $files{$1}++

    my @files = sort keys %files

subcode: grep_l(@pat)
    my $grep_cmd="$(FIND) |xargs grep -l $(pat)"
    my @files
    &call open_r, $grep_cmd |
        chomp
        push @files, $_
