subcode: inter_frame
    $(if:FunctionName~.*_sched_)
        MPIR_SCHED_SCHKPMEM_DECL(1);

    $(for:local_size,remote_size, rank)
        $1 = comm_ptr->$1
    $if !comm_ptr->local_comm
        MPII_Setup_intercomm_localcomm(comm_ptr)
    $my MPIR_Comm *local_comm = comm_ptr->local_comm

    &call coll_frame
        BLOCK

subcode: intra_frame
    comm_size = comm_ptr->local_size
    rank = comm_ptr->rank
    &call coll_frame
        BLOCK

    subcode: send_recv(sbuf, scnt, styp, rbuf, rcnt, rtyp)
        mpi_errno = MPIC_Sendrecv($(sbuf), $(scnt), $(styp), $(to), $(tag), $(rbuf), $(rcnt), $(rtyp), $(from), $(tag), comm_ptr, MPI_STATUS_IGNORE, errflag)
        $if mpi_errno
            $if MPI_ERR_GET_CLASS(mpi_errno) == MPIX_ERR_PROC_FAILED
                *errflag = MPIR_ERR_PROC_FAILED
            $else
                *errflag = MPIR_ERR_OTHER
            MPIR_ERR_SET(mpi_errno, *errflag, "**fail")
            MPIR_ERR_ADD(mpi_errno_ret, mpi_errno)
        

subcode: coll_frame
    BLOCK

    subcode: init_tmp_buf(N)
        $my unit: MPI_Aint
        MPIR_Dataype_get_size_macro(sendtype, unit)
        MPIR_SCHED_CHKPMEM_MALLOC(tmp_buf, void*, $(N)*unit, mpi_errno, "tmp_buf", MPL_MEM_BUFFER)
        $(export:tmp=tmp_buf+$1*unit, $2*unit, MPI_BYTE)

    subcode: get_recv_size
        $local MPI_Aint recvtype_extent
        MPIR_Datatype_get_extent_macro(recvtype, recvtype_extent)
        $(export:recv=(char*)recvbuf+$1*recvcount*recvtype_extent, recvcount, recvtype)

#---------------------------------------- 
subcode: gather_intra_frame
    &call gather_frame
        &call intra_frame
            BLOCK
subcode: allgather_intra_frame
    &call allgather_frame
        &call intra_frame
            BLOCK
#---------------------------------------- 
subcode: gather_frame
    $call gather_trivial
    $if rank == root
        $call get_recv_size
    BLOCK

subcode: allgather_frame
    $call allgather_trivial
    $call get_recv_size
    BLOCK

    macros:
        tag: MPIR_ALLGATHER_TAG
        rank: ($1+comm_size)%comm_size

    subcode: allgather_trivial
        $if sendcount==0 && sendbuf != MPI_IN_PLACE
            return MPI_SUCCESS
        $if recvcount==0
            return MPI_SUCCESS

