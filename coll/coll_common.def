#---- 17 + 5 collectives ---------------
macros:
    coll_list: barrier, bcast, gather, gatherv, scatter, scatterv, allgather, allgatherv, alltoall, alltoallv, alltoallw, reduce, allreduce, reduce_scatter, reduce_scatter_block, scan, exscan
    neighbor_list: allgather, allgatherv, alltoall, alltoallv, alltoallw

subcode: map_each_coll(sub)
    $(for:coll in $(coll_list))
        $call $(sub), $(coll)
        $call $(sub), i$(coll)
    $(for:coll in $(neighbor_list))
        $call $(sub), neighbor_$(coll)
        $call $(sub), ineighbor_$(coll)

#---- algo choices: [(15+5)*n+2]*2 - (intra,inter,allcomm) except scan and exscan (intra only)
#-- used in coll_impl.{h,c} defining CVARs

include: macros/algos_mpir_coll_h.def
macros:
    smp_colls: barrier, bcast, ibcast, reduce, ireduce, allreduce, iallreduce, scan, iscan

#---- Used in defining parameters ----
macros:
    buf_send: const void *sendbuf, int sendcount, MPI_Datatype sendtype
    buf_recv:       void *recvbuf, int recvcount, MPI_Datatype recvtype
    bufv_send: const void *sendbuf, const int *sendcnts, const int *sdispls, const MPI_Datatype sendtype
    bufv_recv:       void *recvbuf, const int *recvcnts, const int *rdispls, const MPI_Datatype recvtype
    bufw_send: const void *sendbuf, const int *sendcnts, const int *sdispls, const MPI_Datatype *sendtypes
    bufw_recv:       void *recvbuf, const int *recvcnts, const int *rdispls, const MPI_Datatype *recvtypes

    bufW_send: const void *sendbuf, const int *sendcnts, const MPI_Aint sdispls[], const MPI_Datatype *sendtypes
    bufW_recv:       void *recvbuf, const int *recvcnts, const MPI_Aint rdispls[], const MPI_Datatype *recvtypes

    buf_reduce: const void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype
    bufv_reduce: const void *sendbuf, void *recvbuf, const int *recvcnts, MPI_Datatype datatype

    args_send: sendbuf, sendcount, sendtype
    args_recv: recvbuf, recvcount, recvtype
    argsv_send: sendbuf, sendcnts, sdispls, sendtype
    argsv_recv: recvbuf, recvcnts, rdispls, recvtype

#---- used in mpir_coll.h defining PARAMS_XXX ---------------
subcode: param_barrier
subcode: param_bcast
    $: void *buffer, int count, MPI_Datatype datatype, int root, \
subcode: param_gather
    $:: $(buf_send), \
    $:: $(buf_recv), int root, \
subcode: param_gatherv
    $:: $(buf_send), \
    $:: $(bufv_recv), int root, \
subcode: param_scatter
    $:: $(buf_send), \
    $:: $(buf_recv), int root, \
subcode: param_scatterv
    $:: $(bufv_send), \
    $:: $(buf_recv), int root, \
subcode: param_allgather    
    $:: $(buf_send), \
    $:: $(buf_recv), \
subcode: param_allgatherv
    $:: $(buf_send), \
    $:: $(bufv_recv), \
subcode: param_alltoall
    $:: $(buf_send), \
    $:: $(buf_recv), \
subcode: param_alltoallv
    $:: $(bufv_send), \
    $:: $(bufv_recv), \
subcode: param_alltoallw
    $(if:decl_neighbor)
        $:: $(bufW_send), \
        $:: $(bufW_recv), \
    $(else)
        $:: $(bufw_send), \
        $:: $(bufw_recv), \
subcode: param_reduce
    $:: $(buf_reduce), \
    $:: MPI_Op op, int root, \
subcode: param_allreduce
    $:: $(buf_reduce), MPI_Op op, \
subcode: param_reduce_scatter
    $:: $(bufv_reduce), MPI_Op op, \
subcode: param_reduce_scatter_block
    $:: $(buf_reduce), MPI_Op op, \
subcode: param_scan
    $:: $(buf_reduce), MPI_Op op, \
subcode: param_exscan
    $:: $(buf_reduce), MPI_Op op, \

#---- used in tsp_algos.def --------------------------
macros:
    args_bcast: buffer, count, datatype, root, comm_ptr
    args_gather: $(args_send), $(args_recv), root, comm_ptr
    args_scatter: $(args_send), $(args_recv), root, comm_ptr
    args_allgather: $(args_send), $(args_recv), comm_ptr
    args_allgatherv: $(args_send), $(argsv_recv), comm_ptr
    args_reduce: sendbuf, recvbuf, count, datatype, op, root, comm_ptr
    args_allreduce: sendbuf, recvbuf, count, datatype, op, comm_ptr
    args_reduce_scatter: sendbuf, recvbuf, recvcnts, datatype, op, comm_ptr
    args_reduce_scatter_block: sendbuf, recvbuf, count, datatype, op, comm_ptr

