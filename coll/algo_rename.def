page: t
    moodule: perl

    my $src = "$ENV{HOME}/work/pull_requests/coll_impl"
    chdir $src or die "can't chdir $src\n"

    my $coll = "ireduce_scatter_block"
    my $algo = "recexch"
    my $algo_to = "gentran_recexch"
    $(if:1)
        my $from = "MPIR_".ucfirst($coll)."_intra_$algo"
        my $to = "MPIR_".ucfirst($coll)."_intra_$algo_to"
        system "git mv src/mpi/coll/$coll/$coll\_intra_$algo.c src/mpi/coll/$coll/$coll\_intra_$algo_to.c"
        update_file("src/include/mpir_coll.h", $from, $to)
        update_file("src/mpi/coll/$coll/$coll.c", $from, $to)
        update_file("src/mpi/coll/$coll/$coll\_intra_$algo_to.c", $from, $to)

        update_file("src/mpi/coll/$coll/Makefile.mk", "$coll\_intra_$algo.c", "$coll\_intra_$algo_to.c")

    $(if:0)
        my $algo = "gentran_recexch_distance_doubling"
        my $algo_to = "gentran_recexch_doubling"
        my $from = uc("MPIR_$coll\_INTRA_ALGO_$algo")
        my $to =   uc("MPIR_$coll\_INTRA_ALGO_$algo_to")
        update_file("src/mpi/coll/include/coll_impl.h", $from, $to)
        update_file("src/mpi/coll/$coll/$coll.c", $from, $to)
        update_impl($coll, $algo, $algo_to, $from, $to)

fncode: update_file($f, $from, $to)
    &call open_w, /tmp/t.tmp
        &call open_r, $f
            s/$from/$to/g
            print Out $_
    system "mv -v /tmp/t.tmp $f"
    # system "git add $f"

fncode: update_impl($coll, $algo, $algo_to, $from, $to)
    my $f = "src/mpi/coll/src/coll_impl.c"
    my $cvar = "MPIR_CVAR_".uc($coll)."_INTRA_ALGORITHM"
    &call open_w, /tmp/t.tmp
        &call open_r, $f
            $if /strcmp\($cvar/
                s/"$algo"/"$algo_to"/
            $else
                s/$from/$to/g
            print Out $_
    system "mv -v /tmp/t.tmp $f"
    # system "git add $f"
