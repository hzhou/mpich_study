fncode: MPIR_Allgather_intra_ring(PARAMS_ALLGATHER, MPIR_Errflag_t * errflag)
    &call allgather_intra_frame
        $if sendbuf!=MPI_IN_PLACE
            $fall MPIR_Localcopy($(send), $(recv:rank))
        i_l = $(rank:rank-1)
        i_r = $(rank:rank+1)
        $for i=0:comm_size-1
            i_send = $(rank:rank-i)
            i_recv = $(rank:rank-i-1)
            $call send_recv, $(recv:i_send), i_r, $(recv:i_recv), i_l
        

fncode: MPIR_Allgather_intra_brucks
    &call allgather_intra_frame
        $call init_tmp_buf, sendcount*comm_size
        $if sendbuf!= MPI_IN_PLACE
            $fcall MPIR_Localcopy($(send), $(tmp:0))
        $else
            $fcall MPIR_Localcopy($(recv:rank), $(tmp:0))

        n = 1
        $while n<= comm_size/2; n*=2
            i_s = $(rank:rank+n)
            i_r = $(rank:rank-n)
            $(export:tmp=tmp_buf+$1*unit, $2*unit, MPI_BYTE)
            $call send_recv, $(tmp:0,n), i_s, $(tmp:n,n), i_r

        $if comm_size>n # not power of 2
            i_s = $(rank:rank+n)
            i_r = $(rank:rank-n)
            rem = comm_size-n
            $call send_recv, $(tmp:0,rem),i_s, $(tmp:n:rem), i_r

        $call @rotate_down
    subcode: rotate_down
        n = comm_size - rank
        $fcall MPIR_Localcopy($(tmp:0:n), $(recv:rank))
        $fcall MPIR_Localcopy($(tmp:n:rank), $(recv:0))

