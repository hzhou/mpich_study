# Allow the user to override the hwloc location (from embedded to user
# path)
subcode: config_hwloc
    hwlocsrcdir=""
    hwloclibdir=""
    hwloclib=""

    $if "$with_hwloc_prefix" = "embedded" # default
        # Disable visibility when setting up hwloc
        PAC_PUSH_FLAG([enable_visibility])
        enable_visibility=no;
        HWLOC_SETUP_CORE([src/hwloc],[have_hwloc=yes],[have_hwloc=no],[1])
        # Only build hwloc in embedded mode
        if test "$have_hwloc" = "yes" ; then
            use_embedded_hwloc=yes
            hwlocsrcdir="src/hwloc"
            hwloclib="$HWLOC_EMBEDDED_LDADD"
            PAC_PREPEND_FLAG([$HWLOC_EMBEDDED_LIBS], [WRAPPER_LIBS])
            # if possible, do not expose hwloc symbols in libmpi.so
            PAC_PREPEND_FLAG([$VISIBILITY_CFLAGS], [HWLOC_CFLAGS])
        fi
        PAC_POP_FLAG([enable_visibility])
    $else
        AC_CHECK_HEADERS([hwloc.h])
        # hwloc_topology_set_pid was added in hwloc-1.0.0, which is our
        # minimum required version
        AC_CHECK_LIB([hwloc],[hwloc_topology_set_pid])
        AC_MSG_CHECKING([if non-embedded hwloc works])
        $if "$ac_cv_header_hwloc_h" = "yes" -a "$ac_cv_lib_hwloc_hwloc_topology_set_pid" = "yes" 
            have_hwloc=yes
        $else
            have_hwloc=no
        AC_MSG_RESULT([$have_hwloc])

        # FIXME: Disable hwloc on Cygwin for now. The hwloc package,
        # atleast as of 1.0.2, does not install correctly on Cygwin
        AS_CASE([$host], [*-*-cygwin], [have_hwloc=no])

        if test "$have_hwloc" = "yes" ; then
            hwloclib="-lhwloc"
            if test -d ${with_hwloc_prefix}/lib64 ; then
                PAC_APPEND_FLAG([-L${with_hwloc_prefix}/lib64],[WRAPPER_LDFLAGS])
                hwloclibdir="-L${with_hwloc_prefix}/lib64"
            else
                hwloclibdir="-L${with_hwloc_prefix}/lib"
            fi
        fi

    # ---------------------------------
    if test "$have_hwloc" = "yes" ; then
    AC_DEFINE(HAVE_HWLOC,1,[Define if hwloc is available])
    fi

    HWLOC_DO_AM_CONDITIONALS
    AM_CONDITIONAL([have_hwloc], [test "${have_hwloc}" = "yes"])
    AM_CONDITIONAL([use_embedded_hwloc], [test "${use_embedded_hwloc}" = "yes"])


