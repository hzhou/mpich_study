subcode: _autoload
    $include "mpi.h"
    $include <stdio.h>
    $include <stdlib.h>
    $include "mpitest.h"
    $include "dtpools.h"

    $plugin DTP_call

subcode: DTP_call(name, @args)
    err = $(name)($(args));
    $(if:name~DTP)
        assert(err == DTP_SUCCESS)
    $(elif:name~MPI)
        assert(err == MPI_SUCCESS)

macros:
    # count: 512
    count: 262144
    debug: 1

subcode: _autoload
    $call init_dtp_desc_0

subcode: init_dtp_desc_2
    $:: const char *s_send_obj = NULL;
    $:: const char *s_recv_obj = "0: resized [lb 8, extent 81680]"
    $::                          "1: blkhindx [numblks 2, blklen 1, displs (8,4092)]"
    $::                          "2: indexed [numblks 256, blklens (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), displs (0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,84,88,92,96,100,104,108,112,116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,192,196,200,204,208,212,216,220,224,228,232,236,240,244,248,252,256,260,264,268,272,276,280,284,288,292,296,300,304,308,312,316,320,324,328,332,336,340,344,348,352,356,360,364,368,372,376,380,384,388,392,396,400,404,408,412,416,420,424,428,432,436,440,444,448,452,456,460,464,468,472,476,480,484,488,492,496,500,504,508,512,516,520,524,528,532,536,540,544,548,552,556,560,564,568,572,576,580,584,588,592,596,600,604,608,612,616,620,624,628,632,636,640,644,648,652,656,660,664,668,672,676,680,684,688,692,696,700,704,708,712,716,720,724,728,732,736,740,744,748,752,756,760,764,768,772,776,780,784,788,792,796,800,804,808,812,816,820,824,828,832,836,840,844,848,852,856,860,864,868,872,876,880,884,888,892,896,900,904,908,912,916,920,924,928,932,936,940,944,948,952,956,960,964,968,972,976,980,984,988,992,996,1000,1004,1008,1012,1016,1020)]";

subcode: init_dtp_desc_0
    $(set:blklen=$(eval:$(count)/2))
    $:: const char *s_send_obj = 
    $::     "0: blkindx [numblks 1, blklen $(blklen), displs (0)]"
    # $::     "0: vector [numblks 2, blklen $(blklen), stride $(blklen)]"
    $::     "1: resized [lb -400, extent 4]"
    $::     "2: resized [lb 0, extent 40]"
    # $::   "3: vector [numblks 2, blklen 2, stride 3]"
    $::     ;
    $:: const char *s_recv_obj = NULL;

template: init_dtp_desc_1
    const char *s_send_obj = "0: struct [numblks 1, blklen (5), displs (8)]"
                             "1: blkhindx [numblks 2, blklen 1, displs (8,40)]"
                             "2: resized [lb 8, extent 8]";
    const char *s_recv_obj = "0: blkhindx [numblks 2, blklen 1, displs (8,40)]"
                             "1: resized [lb 8, extent 8]";
page: dtpools
    module: c
    output_dir: ./test_out
    seed: 0

    $local int err = 0
    $local int errs = 0
    MTest_Init(&argc, &argv)

    $(set:comm=MPI_COMM_WORLD)
    $my int rank
    MPI_Comm_rank($(comm), &rank)

    $my int count = $(count)
    $my DTP_pool_s dtp
    $DTP_call DTP_pool_create, "MPI_INT", count, $(seed), &dtp

    $call @send_recv, 0, 1

    DTP_pool_free(dtp)

    MTest_Finalize(errs)
    return MTestReturnValue(errs)

subcode: send_recv(src, dest)
    $(set:tag=0)
    $my DTP_obj_s dtp_obj, void *buf
    $if rank == $(src)
        &call with_dtp, send
            $DTP_call DTP_obj_buf_init, dtp_obj, buf, 0, 1, count
            $(if:debug)
                $my int *p = buf
                $dump 10:%d:p
            $DTP_call MPI_Send, $(dtp_data), $(dest), $(tag), $(comm)
    $elif rank == $(dest)
        &call with_dtp, recv
            $DTP_call DTP_obj_buf_init, dtp_obj, buf, -1, -1, count
            $DTP_call MPI_Recv, $(dtp_data), $(src), $(tag), $(comm), MPI_STATUS_IGNORE
            $(if:debug)
                $my int *p = buf
                $dump 10:%d:p
            err = DTP_obj_buf_check(dtp_obj, buf, 0, 1, count);
            $if err
                errs++

subcode: with_dtp(send)
    $(set:maxbufsize=1000000000)
    $(if:seed > 0)
        $(if:send=send)
            $(set:idx=0)
        $(else)
            $(set:idx=1)
        $DTP_call DTP_obj_create_idx, dtp, &dtp_obj, $(maxbufsize), $(idx)
    $(else)
        $DTP_call DTP_obj_create_custom, dtp, &dtp_obj, s_$(send)_obj
    void *buf = malloc(dtp_obj.DTP_bufsize)
    $(if:debug)
        $my char *desc
        DTP_obj_get_description(dtp_obj, &desc)
        printf("$(send)_obj: %s\n", desc)
        free(desc)

    BLOCK

    free(buf)
    DTP_obj_free(dtp_obj)

    macros:
        dtp_buf: buf + dtp_obj.DTP_buf_offset
        dtp_type: dtp_obj.DTP_datatype
        dtp_count: dtp_obj.DTP_type_count

        dtp_data: $(dtp_buf), $(dtp_count), $(dtp_type)


