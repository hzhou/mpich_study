include: testsuite.def

page: dtype_send2, p2p_frame
    skip_run: 1

    $struct(T) int a, char[3] b
    $my MPI_Datatype T1
    $call create_type_struct, T1, MPI_INT:1, MPI_CHAR:3
    MPI_Type_commit(&T1)

    $(set:N=20)
    $my int cnt_list[$(N)]
    $my int disp_list[$(N)]
    $for i=0:$(N)
        # X.XX.XXX.XXXX.->
        cnt_list[i] = i+1
        disp_list[i] = i*(i+1)/2 + i

    $my MPI_Datatype T2
    MPI_Type_indexed($(N), cnt_list, disp_list, T1, &T2)
    MPI_Type_commit(&T2)

    $(eval:n=$(N)*($(N)+1)/2+$(N)-1)
    $local struct T send_buf[$(n)]
    $for i=0:$(n)
        send_buf[i].a = i
        strcpy(send_buf[i].b, "ab")
    $(eval:n=$(N)*($(N)+1)/2)
    $local struct T recv_buf[$(n)]

    $my int tag=1
    $if rank==0
        MPI_Send((void*)send_buf, 1, T2, 1, tag, MPI_COMM_WORLD)
    $elif rank==1
        MPI_Recv((void*)recv_buf, $(n), T1, 0, tag, MPI_COMM_WORLD, MPI_STATUS_IGNORE)

    $if rank==1
        $my i1=0, i2=0
        $for i=0:$(N)
            $for j=0:i+1
                $if send_buf[i1].a != recv_buf[i2].a
                    $if errs<10
                        $print "Mismatch: $i - $j: %d <=> %d", send_buf[i1].a, recv_buf[i2].a
                    errs++
                $else
                    $print "Mismatch: $i - $j: %d <=> %d", send_buf[i1].a, recv_buf[i2].a
                i1++
                i2++
            i1++

    MPI_Type_free(&T1)
    MPI_Type_free(&T2)

subcode: document
    &call doc
        Tests basic send/recv of general indexed datatype.
        The created indexed type need have multiple levels, sufficient count, and non-uniform blocksize.

