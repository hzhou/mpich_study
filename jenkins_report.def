output_dir: ./mymake

page: report_make_log
    module: perl

    my ($make_log_file, $compiler, $dur) = @ARGV

    my @make_log
    my %got_hash  # to skip duplicate warnings
    &call open_r, $make_log_file
        $if $compiler=~/intel|icc/
            $call parse_make_log_icc
        $elif $compiler=~/pgi/
            $call parse_make_log_pgi
        $elif $compiler=~/sun/
            $call parse_make_log_sun
        $else
            $call parse_make_log

    my $n_fails = dump_report(\@make_log, $dur)
    exit $n_fails

    # --------------------
    subcode: parse_make_log
        # ./src/mpid/ch4/src/ch4r_proc.h:170:93: warning: declaration of ‘index’ shadows a global declaration [-Wshadow]
        $if /^(\S+:\d+:\s*(error|warning):\s*.*)/ -> $t
            push @make_log, $t

    subcode: parse_make_log_icc
        # ./src/mpid/ch3/include/mpid_coll.h(26): warning #177: label "fn_exit" was declared but never referenced
        $if /^(\S+\(\d+\): (error|warning) #\d+:\s*.*)/ -> $t
            push @make_log, $t

    subcode: parse_make_log_pgi
        # PGC-W-0114-More than one type specified (/var/lib/jenkins-slave/workspace/hzhou-warnings-more/compiler/pgi/config/ch3-tcp/label/centos64/modules/mpl/include/uthash.h: 90)
        $if /^(PGC-W-\d+-.*)/ -> $t
            push @make_log, $t
        $elif /^("\S*", line \d+: warning: .*)/ -> $t
            $while <In>
                $if /^(\s+)(\S.+)/
                    $t.=" $2\n"
                $else
                    last
            push @make_log, $t

    subcode: parse_make_log_sun
        # "src/include/mpir_handlemem.h", line 120: warning: null dimension: indirect
        $if /^(".*",\s*line \d+:\s*warning:.*)/ -> $t
            $if $t=~/opa_gcc_intel_32_64_ops/
                $if !$got_hash{opa_asm}
                    push @make_log, $t
                    $got_hash{opa_asm}=1
            $else
                push @make_log, $t


fncode: parse_warning($t)
    my $o
    $if $t=~/^(\S+):(\d+):/ # gcc
        $o = { file=>$1, line=>$2 }
    $elif $t=~/^(\S+)\((\d+)\):/ # icc
        $o = { file=>$1, line=>$2 }
    $elif $t=~/^PGC-.*\((.*):\s*(\d+)\)/ # pgi
        $o = { file=>$1, line=>$2 }
    $elif $t=~/^"(\S+)", line (\d+): warning:/ # pgi 19
        $o = { file=>$1, line=>$2 }
    $elif $t=~/"(.*)", line (\d+): warning:/ # suncc
        $o = { file=>$1, line=>$2 }
    $elif $t=~/(\S+), line (\d+): warning:/ # suncc
        $o = { file=>$1, line=>$2 }

    $if $o
        $if $o->{file}=~/^.*\/mymake\/(.*)/g
            $o->{file}="~$1"
            $if $o->{file}=~/^~(ucx|libfabric)/
                $o->{skip}="external module: $1"
        $if $t=~/warning #177:/
            # icc: label "xxx" was declared but never referenced
            $o->{skip}="icc: warning #177: unused label"
        # $elif $compiler eq "gcc-4" and $t=~/\[(-Wmaybe-uninitialized)\]/
        #     $o->{skip}="gcc-4: $1"
        $elif $compiler eq "pgi"
            $if $t=~/warning: transfer of control bypasses initialization of/
                $o->{skip}="pgi: goto bypasses variable initialization"
            $elif $t=~/warning: cc clobber ignored/
                $o->{skip}="pgi: cc clobber ignored"
            $elif $t=~/warning: variable \w+ was set but never used/
                $o->{skip}="pgi: variable set but unused"
            $elif $t=~/warning: statement is unreachable/
                $o->{skip}="pgi: statement unreachable"
            $elif $t=~/warning: integer conversion resulted in a change of sign/
                $o->{skip}="pgi: sign conversion"
        return $o
    $else
        return undef

fncode: dump_report($warning_list, $dur)
    my $n_fails = @$warning_list
    $(set:LIMIT=10000)
    $if $n_fails>=$(LIMIT)
        $n_fails = $(LIMIT)
    my $n_tests = $n_fails+1
    &call open_W, summary.junit.xml
        $print <testsuites>
        $print <testsuite failures="$n_fails" errors="0" skipped="0" tests="$n_tests" name="warning">
        $if $dur > 0
            $print <testcase name="1 - build" time="$dur"></testcase>
        my $i = 1
        $foreach $t in @$warning_list
            $if $i>$(LIMIT)
                last
            $i++
            $call dump_warning
                
        $print </testsuite>
        $print </testsuites>
    return $n_fails

    subcode: dump_warning
        $t=~s/"//g
        $t=~s/</&lt;/g
        $t=~s/>/&gt;/g

        my @t_lines = split /\n/, $t
        my $msg = shift @t_lines
        my $detail = join("\n", @t_lines)

        my $o = parse_warning($t)
        $if $o
            $print <testcase name="$o->{file}:$o->{line}">
        $else
            $print <testcase name="$i">
        $if $o->{skip}
            $print <skipped type="TodoTestSkipped" message="$o->{skip}">
            $print <![CDATA[$t]]>
            $print </skipped>
        $else
            $print <failure message="$msg">
            $if !$detail
                $print Build details are in make.log.
            $else
                $print <![CDATA[$detail]]>
            $print </failure>
        $print </testcase>
